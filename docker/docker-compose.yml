version: '3'
services:
  broker-service:
    container_name: broker-service
    build: 
      context: ../services/broker-service
      dockerfile: ./broker-service.dockerfile
    restart: always
    ports: 
      - "8080:80"
    deploy: 
      mode: replicated
      replicas: 1
    networks:
      - go_microservice

  logger-service:
    container_name: logger-service
    build: 
      context: ../services/logger-service
      dockerfile: ./logger-service.dockerfile
    restart: always
    deploy: 
      mode: replicated
      replicas: 1
    networks:
      - go_microservice

  auth-service:
    container_name: auth-service
    build: 
      context: ../services/auth-service
      dockerfile: ./auth-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgresdb port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
    networks:
      - go_microservice


  postgres:
    container_name: postgresdb
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
    networks:
      - go_microservice
  
  mongo:
    container_name: mongo
    image: 'mongo:4.2.16-bionic'
    ports: 
      - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
    networks:
      - go_microservice

networks:
  go_microservice:
    external:
      name: go_microservice